<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.HotelSystem.dao.OrderDao">
    <resultMap id="BaseResultMap" type="com.HotelSystem.entity.Order">
        <id column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="room_id" jdbcType="INTEGER" property="roomId"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="leave_date" jdbcType="DATE" property="leaveDate"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="payment" jdbcType="INTEGER" property="payment"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
    </resultMap>
    <resultMap id="TotalResultMap" type="com.HotelSystem.entity.Total">
        <result column="hotel_id" jdbcType="INTEGER" property="hotelId"/>
        <result column="hotel_name" jdbcType="VARCHAR" property="hotelName"/>
        <result column="stars" jdbcType="INTEGER" property="stars"/>
        <result column="room_id" jdbcType="INTEGER" property="roomId"/>
        <result column="room_name" jdbcType="VARCHAR" property="roomName"/>
        <result column="info_id" jdbcType="INTEGER" property="infoId"/>
        <result column="date" jdbcType="DATE" property="date"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="remain" jdbcType="VARCHAR" property="remain"/>
        <result column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="leave_date" jdbcType="DATE" property="leaveDate"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="payment" jdbcType="INTEGER" property="payment"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    order_id, room_id, start_date, leave_date, amount, payment, create_date
  </sql>
    <select id="selectByExample" parameterType="com.HotelSystem.entity.OrderExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order
        where order_id = #{orderId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.HotelSystem.entity.OrderExample">
        delete from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.HotelSystem.entity.Order">
    insert into order (order_id, room_id, start_date, 
      leave_date, amount, payment, 
      create_date)
    values (#{orderId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, 
      #{leaveDate,jdbcType=DATE}, #{amount,jdbcType=INTEGER}, #{payment,jdbcType=INTEGER}, 
      #{createDate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="com.HotelSystem.entity.Order">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="roomId != null">
                room_id,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="leaveDate != null">
                leave_date,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payment != null">
                payment,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="roomId != null">
                #{roomId,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=DATE},
            </if>
            <if test="leaveDate != null">
                #{leaveDate,jdbcType=DATE},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="payment != null">
                #{payment,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.HotelSystem.entity.OrderExample" resultType="java.lang.Long">
        select count(*) from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order
        <set>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>
            <if test="record.roomId != null">
                room_id = #{record.roomId,jdbcType=INTEGER},
            </if>
            <if test="record.startDate != null">
                start_date = #{record.startDate,jdbcType=DATE},
            </if>
            <if test="record.leaveDate != null">
                leave_date = #{record.leaveDate,jdbcType=DATE},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=INTEGER},
            </if>
            <if test="record.payment != null">
                payment = #{record.payment,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order
        set order_id = #{record.orderId,jdbcType=INTEGER},
        room_id = #{record.roomId,jdbcType=INTEGER},
        start_date = #{record.startDate,jdbcType=DATE},
        leave_date = #{record.leaveDate,jdbcType=DATE},
        amount = #{record.amount,jdbcType=INTEGER},
        payment = #{record.payment,jdbcType=INTEGER},
        create_date = #{record.createDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.HotelSystem.entity.Order">
        update order
        <set>
            <if test="roomId != null">
                room_id = #{roomId,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=DATE},
            </if>
            <if test="leaveDate != null">
                leave_date = #{leaveDate,jdbcType=DATE},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=INTEGER},
            </if>
            <if test="payment != null">
                payment = #{payment,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=DATE},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.HotelSystem.entity.Order">
    update order
    set room_id = #{roomId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      leave_date = #{leaveDate,jdbcType=DATE},
      amount = #{amount,jdbcType=INTEGER},
      payment = #{payment,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=DATE}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

    <select id="getOrders" resultMap="TotalResultMap">
    SELECT
	  hotel_name,
	  start_date as date,
	  room_name,
	  amount
    FROM
	  `order`
	NATURAL JOIN room_type
	NATURAL JOIN hotel
	group by order_id
    </select>

    <select id="getOrdersWithDate" resultMap="TotalResultMap">
    SELECT
	  hotel_name,
	  start_date as date,
	  room_name,
	  amount
    FROM
	  `order`
	NATURAL JOIN room_type
	NATURAL JOIN hotel
    WHERE
	start_date =#{SearchDate,jdbcType=VARCHAR}
    </select>
</mapper>